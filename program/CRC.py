import re

crc_extra_array = [
    50, 124, 137, 0, 237, 217, 104, 119, 0, 0,
    0, 89, 0, 0, 0, 0, 0, 0, 0, 0,
    214, 159, 220, 168, 24, 23, 170, 144, 67, 115,
    39, 246, 185, 104, 237, 244, 222, 212, 9, 254,
    230, 28, 28, 132, 221, 232, 11, 153, 41, 39,
    78, 0, 0, 0, 15, 3, 0, 0, 0, 0,
    0, 153, 183, 51, 59, 118, 148, 21, 0, 243,
    124, 0, 0, 38, 20, 158, 152, 143, 0, 0,
    0, 106, 49, 22, 143, 140, 5, 150, 0, 231,
    183, 63, 54, 0, 0, 0, 0, 0, 0, 0,
    175, 102, 158, 208, 56, 93, 138, 108, 32, 185,
    84, 34, 174, 124, 237, 4, 76, 128, 56, 116,
    134, 237, 203, 250, 87, 203, 220, 25, 226, 46,
    29, 223, 85, 6, 229, 203, 1, 195, 109, 168,
    181, 148, 72, 0, 0, 0, 103, 154, 178, 200,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 90, 104, 85, 95, 83, 0, 0, 8, 204,
    49, 170, 44, 83, 46, 0]


def crc_check(mav):
    # 初始值
    init = 0xFFFF
    # 多项式，0x1021颠倒
    poly = 0x8408
    # 由于我们输入的是连续的字符串，而计算中是以字节为单位，所以我们每两个字符分割一次，并去除开头的fe
    datas = ' '.join(re.compile('.{2}').findall(mav)).split()[1:]
    # 根据第六个字节的 message id添加对应的crc_extra值
    crc_extra = hex(crc_extra_array[int(datas[4], 16)])
    datas.append(str(crc_extra)[2:])
    # 计算CRC校验位
    crc16 = init
    for data in datas:
        # 低8位异或
        a = int(data, 16)
        crc16 = a ^ crc16
        # 右移8次
        for i in range(8):
            if 1 & crc16 == 1:
                crc16 = crc16 >> 1
                crc16 = crc16 ^ poly
            else:
                crc16 = crc16 >> 1
    # 转换成16进制，并消去0x；同时一些结果以0开头，会自动把0给吞掉，.zfill(4)可使结果完整呈现
    crc16 = hex(int(crc16))[2:].zfill(4)
    return crc16[2:] + crc16[:2]


if __name__ == '__main__':
    while True:
        mavdata = input('输入MavLink数据：')
        value = crc_check(mavdata)
        print(value)
